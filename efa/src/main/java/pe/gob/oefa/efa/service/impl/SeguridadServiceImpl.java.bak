package pe.gob.oefa.efa.service.impl;

import java.net.URL;

import org.debugsac.oefa.model.Pagina;
import org.debugsac.oefa.model.PaginaAccion;
import org.debugsac.oefa.sro.HTTP_ServicioPerfilStub;
import org.debugsac.oefa.sro.ServicioPerfil;
import org.debugsac.oefa.sro.ServicioPerfilLocator;
import org.springframework.stereotype.Service;

import pe.gob.oefa.efa.service.SeguridadService;

import com.debugsac.bean.Usuario;
import com.debugsac.impl.HTTP_ServicioUsuarioStub;
import com.debugsac.impl.ServicioUsuario;
import com.debugsac.impl.ServicioUsuarioLocator;

@Service
public class SeguridadServiceImpl implements SeguridadService{

	private static String urlServicioUsuario = "";
	private static String urlServicioPerfil = "";
	static{
		urlServicioUsuario = "http://192.168.1.30:8025/ServicioUsuario.svc";
		urlServicioPerfil = "http://192.168.1.30:8025/ServicioPerfil.svc";
		
//		urlServicioUsuario = "http://10.0.0.48:8585/ServicioUsuario.svc";
//		urlServicioPerfil = "http://10.0.0.48:8585/ServicioPerfil.svc";
	}
	
	public Integer modoUsuario(Usuario usuario) throws Exception{
		Integer resultado = null;
		
			ServicioUsuario servicio = new ServicioUsuarioLocator();
			servicio.setHTTP_ServicioUsuarioAddress(urlServicioUsuario);
			HTTP_ServicioUsuarioStub stub = new HTTP_ServicioUsuarioStub(
					new URL(servicio.getHTTP_ServicioUsuarioAddress()), 
					servicio);
			resultado = stub.modoUsuario(usuario.getUserName());	

			return resultado;
		
	}
	
	public Usuario autenticarUsuario(Usuario usuario) throws Exception{

			ServicioUsuario servicio = new ServicioUsuarioLocator();
			servicio.setHTTP_ServicioUsuarioAddress(urlServicioUsuario);
			HTTP_ServicioUsuarioStub stub = new HTTP_ServicioUsuarioStub(
					new URL(servicio.getHTTP_ServicioUsuarioAddress()), 
					servicio);
			usuario = stub.autenticarUsuario(usuario);
	
			return usuario;
	}
	
	
	public Usuario autenticarUsuario_Modo(Usuario usuario, String contrasena) throws Exception{

		ServicioUsuario servicio = new ServicioUsuarioLocator();
			servicio.setHTTP_ServicioUsuarioAddress(urlServicioUsuario);
			HTTP_ServicioUsuarioStub stub = new HTTP_ServicioUsuarioStub(
					new URL(servicio.getHTTP_ServicioUsuarioAddress()), 
					servicio);
			usuario = stub.autenticarUsuario_Modo(usuario, contrasena);
			
			return usuario;
	}
	
	public Pagina[] obtenerSitemapPorUsuario(String nombreUsuario, Integer idAplicacion) throws Exception{
	
		ServicioPerfil servicio = new ServicioPerfilLocator();
		servicio.setHTTP_ServicioPerfilAddress(urlServicioPerfil);
		HTTP_ServicioPerfilStub stub = new HTTP_ServicioPerfilStub(
				new URL(servicio.getHTTP_ServicioPerfilAddress()),
				servicio);
		
		return stub.obtenerSitemapPorUsuario(nombreUsuario, idAplicacion);
	}
	
	public PaginaAccion[] obtenerPermisoPerfilPorGrupo(Integer idUsuario, String idsGrupo) throws Exception{

		ServicioPerfil servicio = new ServicioPerfilLocator();
		servicio.setHTTP_ServicioPerfilAddress(urlServicioPerfil);
		HTTP_ServicioPerfilStub stub = new HTTP_ServicioPerfilStub(
				new URL(servicio.getHTTP_ServicioPerfilAddress()),
				servicio);
		
		return stub.obtenerPermisoPerfilPorGrupo(idUsuario, idsGrupo);
	}
	
}